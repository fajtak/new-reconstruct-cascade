13.11.2020 - git commit ---
	* Dead OM fix

13.11.2020 - git commit 546f1cc16ff321d3d58413e23d3b55954aa4d454
	* OM masking of the MC data added
	* MC data has to be now processed with the -c and -s flags
	* MCstudyRecCasc.C now reads from cluster folders if specified
	* compareDataMCCascades.C extended
	* OMs that are not used in the likelihood are drawn with empty circles
	* slight changes in the root scripts

09.11.2020 - git commit 9444f33e2698b055e0f5234904ac57f98200000b
	* removed 1.5 p.e. cut in CountTrackHitsSegment

05.11.2020 - git commit 723cdcdc432756fc768c1af1f48e4ba3408213a4
	* TF1 fix

05.11.2020 - git commit 408a54e0cec3e07db9d9d187e56f2ecf55c95444
	* CountTrackHitsSegment extended for 46 m and 1.5p.e. cuts

04.11.2020 - git commit bd515df86b7b581762b1ea258e997050b535dab1
	* DatastudyRecCas.C and MCstudyRecCas.C now take into account also uncontained cascades
	* MCstudyUnconRecCas.C added to study uncontained cascades
	* studyMCCascade.C extended
	* compareDataMCCascades.C updated
	* new gZCut to suppress muon tracks implemented, default value 250 m
	* likelihoodHitOnly added to TTree and calculated for every reconstructed cascade
	* CountTrackHitsSegment() implemented according to Zuzana's study and used as default
	* likelihoodCut is now growing function with respect to energy

21.10.2020 - git commit 32f30ea0a735c49515b81857de561b3a26542b0b
	* memory leaks in the eventVis fixed
	* hits TFilter cut returned
	* minor changes to studyMCCascade.C

25.09.2020 - git commit d974548c7720887d4c754cf2cf547445f3742e42
	* 20 hits TFilter cut removed
	* studyMCCascade.C root script added

10.09.2020 - git commit a6277a2971fbad4259ef4fd4cfe6fc1f6a8a3c15
	* the minimal difference between causalityHits and TFilterHits can be controlled with NCutDiff keyword in config file

10.09.2020 - git commit 9a9857d4c43e3ebfc7a338e4a687a8539625c702
	* new -z flag to process laser runs (no visualizations and no limit on the number of reconstructed cascades)

09.09.2020 - git commit 53975ca790741418ce0ef718137a8ca226f02428
	* section mask for MC data bug fix

09.09.2020 - git commit 18de80d31d8120c35d41f67bda7bc65c7a8c6660
	* gitignore wiki files
	* -n and -e flags bugs reported by Eliska fixed

04.09.2020 - git commit cfea783884ea106092ea7836749a24523a823913
	* If BARS_LOG_TABLE environment variable is set then the program can be started from everywhere in your computer

04.09.2020 - git commit 9ce7933fa42311c6e643e0294b640eedd1cc7831
	* root script timeRes.C extended for charge saturation curve and fitting of the time residuals for individual channels
	* SaveServiceInfo extended for Qexp and QMeas
	* Newly also unformatted timecalib_dzh can be read for time calibration
	* bash script joinTimeRes added to merge results from the individual runs

03.09.2020 - git commit 264c29c78b4b4362c706d80073b7c7e310a411e3
	* New flag (-b) to save time residuals to timeRes.txt file was added
	* New root script timeRes.C for processing of the timeRes.txt output files

02.09.2020 - git commit dfc3d543dcd075d6da50e6fd51200dd367e6b656
	* Grid likelihood technique added
	* Only contained MC cascades are now being processed

01.09.2020 - git commit c15582409684ec5bb6f221f29395920933af9149
	* fix of sectionMask and qCalib

01.09.2020 - git commit 931a80d713d02b6370261dbf4ca568f77efc0aad
	* fix of qCalib with new Folder structure

01.09.2020 - git commit aa3da78c5ce7ebeed8b40acb18f59017518eacd2
	* the sections are masked based on the section.mask.root files on the event by event basis
	* productionID can be changed by config.rc files with ProductionID keyword
	* DatastudyRecCas.C changed so now different years can be processed together with -1 value for year
	* MCstudyRecCas.C nonHit MCs can be processed + comparison of reconstruction directions errors added
	* In the new folder processing (-l flag) you can use tad flag (-t) to change the version easily

27.08.2020 - git commit f41bee170a5c7cc74dacaa21d078ea1c112b1820
	* parallel processing scripts fixed
	* -g flag (nonHit Probability) is now default in the parallelProcessAllRuns/VM
	* DatastudyRecCas.C now produces wikiOutput of reconstructed cascades + cut on Z position < 240m
	* only active channels are used to normalize loglikelihood + different logLikelihood cut for nonHit Probability
	* root Cascstudy.C script added

21.08.2020 - git commit 736d044e4e5649bad7b864f102b007fc2b30bc7a
	* parallel processing time is now saved in logs/processingTime

21.08.2020 - git commit 495016fcbce87bfbd26a1f9d8c879a39ebbb4b45
	* true parallel processing added
	* slight change in programOutputTime.C

21.08.2020 - git commit caf3c2b3ed2f8c5139da272a1eefba6831bfb3f6
	* trackCharge added
	* slight changes to root scripts
	* programOutputTime.C now does the statistics of processed/unprocessed runs
	* implementation of charge saturation changed. Now pulses with Q > 100 p.e. are not used for reconstruction

19.08.2020 - git commit 3ccf89d40f1ebd43ed708dbadd7534e6ba2642b1
	* nTrackHits added
	* root DatastudyRecCasc.C can now ignore LED matrix runs, can work with Dec and RA and store filtered
	  cascades to a single output root file
	* seasonID added to the output TTree

11.08.2020 - git commit 3c0f93d8022795b1f6b60ee21dfe40dff1110f44
	* Minor fix

11.08.2020 - git commit 34260097d2f81a42f397d606d4a9dbe047026213
	* Experimental runs shorter than 2 hours are not processed
	* programOutputTime.C has now third parameters specifying the path to the log file

11.08.2020 - git commit dc01939b9d53c2f6ba63dd7d3e7288aabd8353bf
	* MCNuTimeConstant can be changed from the config.rc file
	* minor changed to compareDataMCCascades.C and DataStudyRecCac.C
	* readMCNuVM fixed multi-threading
	* joinProgramOutputs now accept third parameter for the processing folder

07.08.2020 - git commit da34a00c91a217ef082d6063bd7c22540b16959e
	* number of likelihood steps in theta, phi and energy can be modified in config.rc
	* geometry path for 2019 and 2020 data changed

07.08.2020 - git commit 86bc32586ff3ff7a338bdf0606a8884158d4fdea
	* bash script joinProgramOutputs added
	* fix of the qcalib path for new data structure

07.08.2020 - git commit 2f81718d4e0d4ad05daaa58bfb9dd2f86f3c9561
	* processing of the new data format from second half of 2019 added

06.08.2020 - git commit 619eb4860f76d74c48b0467c3b3db5980b5d7173
	* serious bug in TransformToUnifiedEvent for experimental data removed

05.08.2020 - git commit 64732e64b11ac84187c073dd3f9bfbc6a3d8dbd5
	* folder results necessary for data-mc comparison added
	* folder logs necessary for multi-threading experimental data processing
	* processAllRuns and processAllRunsVM are now multi-threading

05.08.2020 - git commit c70a5774dcbbbd58f6a5de7393e91b3b19eb7aea
	* readMCMuVm and readMCNuVM are now multi-threading

04.08.2020 - git commit 4c7ee37d6faf243877354970fc0008353b8a6509
	* json files production fixed for MC data
	* recCascResults.root production fixed for MC data

04.08.2020 - git commit 4163c79b4b0223f7ce0629fe277b877b313b7d53
	* readMCMuVM and readMCNuVM from scripts/bash folder are now more sophisticated
	* value of the MCMuTimeConstant can be now changed in config.rc file with "MCMuTimeConstant" keyword

03.08.2020 - git commit a94034a182ed8c735059e8822c6c3667a90f0aaf
	* declination and rightAscension calculation based on the Martin's code added
	* eventTime (unixTime of the event) added to TTree
	* charge saturation curve changed to 10mill to get rid of errors + correction calculated only for Q > 30 p.e.

24.07.2020 - git commit d2bc0d76508134f8077f9e53aa33d998ef11bde0
	* charge saturation, nonHit and noise likelihood terms can be controlled from config.rc
	* memory leak with charge saturation solved
	* readNoiseProbability() added to MCData

24.07.2020 - git commit ee5eaa8733ddca2b7e4b236d429fb84c4b94cb96
	* newly implemented switches (q,p,g) now without required argument
	* all mc simulations (a,m,u) now have to be started with -f /path/to/source/mc/data otherwise processing is terminated
	* also input and output file paths were corrected
	* logLikelihood table has to be put into inputFiles

24.07.2020 - git commit 33d4033734a24f62bd4630e461d6071d24d80bea
	* merge commit

24.07.2020 - git commit a81aeeb1a8f3babb77ad70ed1fc87c93e509d97e
	* paths in the bash/readMCMuNUVM changed
	* root/DatastudyRecCac.C can now process all the years in once when -1 is used
	* root/compareDataMCCascades.C axis titles changed
	* root/programOutputTime.C can now work with runs with unknown time duration
	* two different time constants for MuMC and NuMC implemented
	* unified event has now clusterID
	* number of reconstructed cascades is controlled and if larger than 50, run is terminated

23.07.2020 - git commit 20c18af968cd02c2e9a482912d3375fbe7921c02
	* new switch "-q" for Charge Saturation Correction
	* Charge Saturation Correction added to TransformToUnifiedEvent()

21.07.2020 - git commit ec0dde659798b9de3911749b7237855e723c5a64
	* new variable "correctedEnergy" added to TTree
	* energy correction added -> GetCorrectedEnergy()

20.07.2020 - git commit 57ae7a826bf517e1905c9f7b66ce6f9bdba12e12
	* new switch "-p" for noise-hit likelihood term
	* New file with averaged noise probabilities for all OMs added: noiseProbability_Binwidth_1pe.dat

13.07.2020 - git commit 81f4394aee21a21208af2809cefdfaf7e0450be2
	* new switch "-g" for non-hit likelihood term

17.06.2020 - git commit be0c6d663661faafcc6e37a5d0e7de7a91d63859
	* minor fix

17.06.2020 - git commit 5b31e3d912f29298050d0e72a0515707f81c2738
	* slight fix of the readMCNu/MuCM scripts
	* newly MC files (atm muon bundles and up-going neutrinos) can be processed on VM with -f switch

17.06.2020 - git commit 5b31e3d912f29298050d0e72a0515707f81c2738
	* new scripts for wout -> root MC data processing added

16.06.2020 - git commit 3e78a6e3557fabeb2cf9aebf8bbbff30f29865f8
	* new switch "-l" for new folder data structure from mid 2019
	* in root scripts DatastudyRecCas.C and MCstudyRecCas.C the .root output added so now the MC and Data results can be compared
	* new script compareDataMCCascades.C added to produce comparison histograms for Real and MC data

04.06.2020 - git commit 16da6406bf6fae0d593decefd9814008141b56e3
	* new switch "-w" for reading from eos with root://eos.jinr.ru// prefix
	* time correction -2500ns for season 2016, cluster0, runs > 389 implemented
	* nStrings in Event and Charge Visualizations changed to number since it didn't compile on VM
	* expected muon hits are drawn just if they are closer than 100 m from the track

03.06.2020 - git commit 3c726cdb4c8c986291949cba60e65a40a051ca50
	* Drawing of the expected muon hits added to the visualization
	* DataStudyRecCasc.C extended, the XY cascade positions drawn
	* bash script downloadJoint from eos added
	* root script for the programOutput_season_cluster.log added with basic statistics

27.05.2020 - git commit 3e0819767f7ba5b355ac2eb9a06329cebae4368c
	* downloadJointVal and downloadJointEos bash scripts edited
	* structure of the timeCal and qCalib files is now verified

27.05.2020 - git commit 1f16822d0d80312b23760dcf9c4643bb1156848c
	* new bash scripts added from VM to process runs + make folders

27.05.2020 - git commit 05e39d85e51dca5af2afe884afada1a13168585d
	* new bash scripts added to download results from VM machines to the user computer
	* slight changes in DatastudyRecCas.C

25.05.2020 - git commit 2bc0c5fbf7382e18e683e447367e58a119068cc7
	* minor fix

25.05.2020 - git commit cd50f9d4e50ca5fea427abc3d1b89a6077f88f2d
	* added new bash script to download joint+qclib files
	* when the -o "/path/to/store/results/" (output) switch is used the results are saved there
	* if the rootOutputFile is not produced the code stops

23.05.2020 - git commit e5ad43b29f7f736b89d054782c4870a305dd2720
	* JSON output finally added

23.05.2020 - git commit 651200544339b6f6b5ac71e36e7740e2003c88c3
	* first version of the track filter implemented
	* output is the histogram h_nHitsTrack in Histograms

20.05.2020 - git commit 0d404ae3bac3e239aefbe4ee7334d89f3076ce6d
	* new bash scripts for processing of the new runs only
	* new root script for the processing of the programOutput.log
	* new root script DatastudyRecCasc.C

16.05.2020 - git commit 42fa5a7aa10258e521bac102ab191e5bc1bd618f
	* filling QTotal histogram added

16.05.2020 - git commit 5b45010648245a367ece422fdc86bd13411699f8
	* new switch -e to process a single event specified by the number behind e
	* results are saved to the singleRecCascResults_eventID.root file to not overwrite the whole run processing

14.05.2020 - git commit af2a8d23dafdb0c4fcff5d3fe7878dd109eafcad
	* bash script for remote PC corrected. It has to be started from the build folder with ../scripts/bash/processAllRunsRemote Year Cluster
	* Segmentation fault for runs without TTree or Branches solved out

14.05.2020 - git commit 2e8d083df84dad75f33cf90f10276ae80a7143ed
	* slight changes to bash scripts

14.05.2020 - git commit c8504582ec27e7a8aa322c00d08283dc18e234ec
	* scripts folder re-organized
	* bash scripts for batch run processing on local as well remote computer added
	* Qchi2Cut value increased from 50 to 100

11.05.2020 - git commit b98212f28dea09f1e214e06c4f5485df0f79db8f
	* Initial commit

***********************************************************************************************************************************
Transition to Reconstruction Software V.2.0
***********************************************************************************************************************************

12.02.2020 - git commit ---
	* Changes in the folder paths for VM68 (processExperimental, json, saveHistograms)
	* 2019 geometry read directly from /home/fajtak/geometry-tmp/

12.02.2020 - git commit aa3740c13ad24331de52754d0e1626afb29f3366
	* Huge change!!! All inputs (data, MC, MCcascades) are now processed in the same way
	* standardized UniformEvent was implemented and all different inputs are transformed to this format
	* DoTheMagicUnified()
	* EstimatePosition based on the Matrix approach from ANTARES
	* Caussality filter
	* In the next commit all functions for individual inputs are going to be removed
	* QMEstimatoCut decreased from 2000 to 600


11.02.2020 - git commit 108c4fbb0d926d85774b8827724a57e1d2fc2842
	* QCutOverall added with default value 500
	* QCutHits increased to 10
	* NCut decreased to 70
	* logLikelihood return value divided by g_pulses size not 288
	* Now the first non zero time of the run is found

04.02.2020 - git commit 0414a2e6ba3d8b026c26beb7928e85ab014656d8
	* minor changes to studyReconstructed(MC)Cascades.C
	* config.rc: number of hits increased from 60 -> 80 + TDelayCut 400 -> 600
	* IMPORTANT: MCCascades and all corresponding filters extended for MC noise
	* h_chargePerEvent histogram added and this property is also used to filter events (overallEventCharge [p.e] > 250)
	* error in the MCCascade reconstruction corrected
	* event visualization for MCCascade added
	* PrintCascadeJSON() added to save jsons that can be visualized by the event viewer
	* structure of the BARS::DATA::Direcotry and FileName has changed
	* the "o" switch now can be used to save results to other folder (useful for VM processing)
	* Estimate initial position again based on the grid approach

28.01.2020 - git commit 13123210d57a882fac10f7d1bbaa1a935139ba62
	* The nonHit term added to the logLikelihood fitting
	* the initial position and time estimation again based on the highest Q OM
	* charge visualization extended to show expected charge on all OMs
	* initDist and FinalDist added to the nTuples for MC data
	* time of processing added

07.01.2020 - git commit 41a7cc590aca373748dffa028379057e85b296fe
	* The first fit is again done with MEstimator

07.01.2020 - git commit 59abf51237727bee7d64a0d359a150a18885dab5
	* SetFCN(chi2) added before the first fit

06.01.2020 - git commit 5de116f1f39ea6afe1c0239300e9856d28edb4f4
	* new switch "a" to process Zhan-Arys MC cascades
	* values in the config.rc changed and branchCut and likelihoodCut values added
	* in studyReconstructedMCCascades.C script added a new histograms for position mismatch
	* added config file configDZH.rc for processing of the simulated cascades
	* logLikelihood fitting CORRECTED!!!
	* the first fit in the chain is again chi2
	* to guess initial fitiing time and position a grid of positions around detector are tested and value with smallest chi2 is used.
	* added all the filters for MCcascades
	* New file with MCcascade geometry added array2016_phys_kebkal.dat

11.12.2019 - git commit beab71ada52335628d4c038c20800208197f2902
	* new switch "u" to process MC single up-going atmospheric neutrinos
	* added two new bash scripts to download and read MC single up-going atmospheric neutrinos (downloadDataNu and readMCNu)
	* added function OMIDAlreadyInGPulses for MC data

10.12.2019 - git commit 45278b764bf40181994348579a0ee4cec64fa917
	* Huge extension of the whole program. Now MC atmospheric muon bundles can be read and cascades created on the muon tracks can be studied.
	* Added switch -m with no argument which enables to process MC data
	* Now the charge of all the pulses is calibrated -> QCut has to be set in p.e.
	* Added two bash scripts downloadMCData and readMC that downloads MC data and transforms them from wout to root structure
	* Added root script studyReconstructedMCCascades.C to study reconstructed MC cascades where all the parameters are known
	* g_pulses now have MCflag member that tels you the origin of the hit
	* scattering correction and Log(Q) removed from ExpectedTime -> It will be studied in the future
	* all the filters has been replicated to be able to work with BEvents from MC simulations
	* output of the program has been extended for RunInfo. Now the number of entries and time duration of the run is printed


04.12.2019 - git commit 3a305382d6f026cf422822e9ddd05ce7a577974a
	* Minor corrections

03.12.2019 - git commit 9f1a0d6847b07ca5d7a3e7136dba78e313a14401

	* default value of the LikelihoodCut increased from 2 -> 2.5
	* studyReconstructedCascades.C extended significantly. Now it shows also reconstructed energy and theta and also energy and TFilterHits cuts are used
	* TMultiGraphs in charge and event visualizations have axis labels now
	* existence of the 4D logLikelihood table is checked

29.11.2019 - git commit 3249e8e195299ca1276254f504876cef53d3f0fb

	* Loglikelihood for direction and energy reconstruction added
	* 4D pdf table is read
	* 8 string graphs with measured and expected charges are created

22.11.2019 - git commit 47fc8ce4b17b7e12e5ab351a816b852ac311ec7c

	* New switch "-t productionID" (tag) has been added to be able to change the name of the data processing production ID. The default value is "barsv051" other common option is "r01_i01_j01_t01"

20.11.2019 - git commit d0292fc96f7f60b4cb176654feaee6db1f1547dc

	* In downloadJoint and downloadJointAllRuns added also download of the qcalib file from Zhenya's DQM
	* Qcalib is read from h0XXX.qcalib file and if qcalib constant is -1 it is assumed that the OM is not working
	* CloseHitsFilter is now based on the qcalib and not on the h_nHitsOM
	* start time of the run is newly taken from the fifth header entry since there are runs where the first two entries have zero values

19.11.2019 - git commit db5a086f8e6ea6feec34a087b8a9e54c1963ae50

	* src/config.rc is now used as a default option for processAllRuns script
	* changes in the values of the cut variables saved in src/config.rc
	* change in the calculation of the closeHits. Now also the first lower layer of OMs is taken into account when the closest OMs are calculated

19.11.2019 - git commit 48cc8136f96c177ecfded97b66ae4aac036d12db

	* New switch "-w eventID" was added which enables to produce only single visualization of the event with given ID without any fitting. Very useful for the verification of the reconstructed cascades by someone else.
	* The first fit after QFilter was changed from chi2 to MEstimator (ANATERES) which is much more stable for low Qcut values
	* values returned from chi2 as well as MEstimator are newly divided by NDF
	* the histogram h_nHitOM which is used for the closeHits filter is newly correctly filled before the main event loop which makes the whole procedure slower but better
	* the implementation of the gBranchCut was corrected
	* number of close hits in the closeHitsFilter has been changed from 10 to 6
	* multiple changes in the values of the cut variables saved in src/config.rc
	* start time of the run is now extracted from the second header entry since some of the runs have the first entry equal 0
